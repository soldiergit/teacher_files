     anon（匿名）
     org.apache.shiro.web.filter.authc.AnonymousFilter
     anon:例子/admins/**=anon 没有参数，表示可以匿名使用。
     不需要登录就能访问,一般用于静态资源,或者移动端接口


     authc（身份验证）
     org.apache.shiro.web.filter.authc.FormAuthenticationFilter
     authc:例如/admins/user/**=authc表示需要认证(登录)才能使用，FormAuthenticationFilter是表单认证，没有参数


     authcBasic（http基本验证）
     org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter
     authcBasic：例如/admins/user/**=authcBasic没有参数表示httpBasic认证


     logout（退出）
     org.apache.shiro.web.filter.authc.LogoutFilter


     noSessionCreation（不创建session）
     org.apache.shiro.web.filter.session.NoSessionCreationFilter


     perms(许可验证)
     org.apache.shiro.web.filter.authz.PermissionsAuthorizationFilter
     perms：例子/admins/user/**=perms[user:add:*],参数可以写多个，多个时必须加上引号，并且参数之间用逗号分割，例如/admins/user/**=perms["user:add:*,user:modify:*"]，当有多个参数时必须每个参数都通过才通过，想当于isPermitedAll()方法。


     port（端口验证）
     org.apache.shiro.web.filter.authz.PortFilter
     port：例子/admins/user/**=port[8081],当请求的url的端口不是8081是跳转到schemal://serverName:8081?queryString,其中schmal是协议http或https等，serverName是你访问的host,8081是url配置里port的端口，queryString
     是你访问的url里的？后面的参数。


     rest  (rest方面)
     org.apache.shiro.web.filter.authz.HttpMethodPermissionFilter
     rest：例子/admins/user/**=rest[user],根据请求的方法，相当于/admins/user/**=perms[user:method] ,其中method为post，get，delete等。


     roles（权限验证）
     org.apache.shiro.web.filter.authz.RolesAuthorizationFilter
     roles：例子/admins/user/**=roles[admin],【表示必须具有admin参数才可以访问】参数可以写多个，多个时必须加上引号，并且参数之间用逗号分割，当有多个参数时，例如admins/user/**=roles["admin,guest"],每个参数通过才算通过，相当于hasAllRoles()方法。


     ssl （ssl方面）
     org.apache.shiro.web.filter.authz.SslFilter
     ssl:例子/admins/user/**=ssl没有参数，表示安全的url请求，协议为https


     user （用户方面）
     org.apache.shiro.web.filter.authc.UserFilter
     user:例如/admins/user/**=user没有参数表示必须存在用户, 身份认证通过或通过记住我认证通过的可以访问，当登入操作时不做检查